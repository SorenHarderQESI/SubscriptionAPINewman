{
	"info": {
		"_postman_id": "f37076b2-8587-491d-a9b6-fbdb297c45d0",
		"name": "Subscription API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20016762"
	},
	"item": [
		{
			"name": "/v1/healthcheck@Start",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Body is correct\", function () {",
							"    pm.response.to.have.body(\"true\");",
							"});",
							"",
							"postman.setNextRequest('Subscription');",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"Start of workflow\");\r",
							"pm.collectionVariables.set(\"runningCollection\", true);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/plain"
					}
				],
				"url": {
					"raw": "{{SUB_BASE_URL}}/healthcheck",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"healthcheck"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"healthcheck"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "true"
				}
			]
		},
		{
			"name": "Subscription",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"subscrArr = [\"AppSubscription\", \"AdwordsSubscription\", \"CrawlSubscription\", \"QualityAssuranceSubscription\", \"DocumentsSubscription\", \"AccessibilitySubscription\", \"PolicySubscription\", \"PrioritySubscription\", \"SeoSubscription\", \"LinkCheckSubscription\", \"SpellingSubscription\", \"InventorySubscription\", \"ReadabilitySubscription\", \"UnsafeDomainsSubscription\", \"ApiSubscription\", \"GroupsSubscription\", \"SsoSubscription\", \"FeedbackSubscription\", \"BehaviourmapSubscription\", \"KeyMetricsSubscription\", \"FunnelsSubscription\", \"ResponseSubscription\", \"SupportSubscription\", \"SinglePageCheckSubscription\", \"TagsSubscription\", \"RolesSubscription\", \"ReportsSubscription\", \"ExportsSubscription\", \"PasswordPolicySubscription\", \"SecuritySubscription\", \"SeoTierTwoSubscription\", \"SeoTierThreeSubscription\", \"AnalyticsSubscription\", \"AnalyticsFiltersSubscription\", \"AnalyticsGroupsSubscription\", \"AnalyticsLiveSubscription\", \"AnalyticsVisitorsSubscription\", \"AnalyticsContentSubscription\", \"AnalyticsCampaignsSubscription\", \"AnalyticsTrafficSourcesSubscription\", \"AnalyticsInternalSearchSubscription\", \"AnalyticsEventTrackingSubscription\", \"AnalyticsBehaviourSubscription\", \"AnalyticsEntriesExitsSubscription\", \"PerformanceSubscription\", \"WebSecuritySubscription\", \"PrePublishSubscription\"];\r",
							"var subscrArrLen = subscrArr.length;\r",
							"var rndSub = _.random(0,subscrArrLen-1); \r",
							"\r",
							"var rndYN = \"Randomly\";\r",
							"if(pm.info.iterationCount == subscrArrLen) {  \r",
							"    rndYN = \"Non-randomly\"\r",
							"    rndSub = pm.info.iteration;\r",
							"}\r",
							"pm.collectionVariables.set(\"rndSub\", rndSub);\r",
							"\r",
							"var subName = subscrArr[rndSub];\r",
							"pm.collectionVariables.set(\"subName\", subName);\r",
							"console.log(rndYN + \" using \" + subName + \". (Diff subs: \" + subscrArrLen + \")\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var subName = pm.collectionVariables.get(\"subName\");\r",
							"\r",
							"if(subName == 'DummyString') // All subscription-types return 200 now\r",
							"{\r",
							"    pm.test(\"Status code is 500\", function () {\r",
							"        pm.response.to.have.status(500);\r",
							"    });\r",
							"\r",
							"    var errorJson = {\r",
							"        \"Message\": \"Request Error ResultSetTooLarge: Result set size exceeded max size 16000000 bytes\",\r",
							"        \"Object\": null\r",
							"    }\r",
							"    pm.test(\"ResultSetTooLarge test\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData).to.eql(errorJson)\r",
							"    });\r",
							"} else {\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"Schema validation for \" + subName, function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        var jsonLength = jsonData.length;\r",
							"        var elem  = jsonData[_.random(0, jsonLength-1)];\r",
							"        var accountId = elem.AccountId;\r",
							"        pm.expect(accountId).to.be.a(\"number\");\r",
							"        pm.expect(elem.Status.Enabled).to.be.true;\r",
							"        console.log(\"with \" + jsonLength + \" elements, verifying accountId \" + accountId )\r",
							"    });\r",
							"}\r",
							"\r",
							"postman.setNextRequest('GET Sites');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/subscriptions?subscription={{subName}}",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"subscriptions"
					],
					"query": [
						{
							"key": "subscription",
							"value": "{{subName}}",
							"description": "See https://siteimprove-wgs.atlassian.net/wiki/spaces/OSS/pages/4099145751/API-parameter+subscription"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Sites",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var jsonLength = jsonData.length;\r",
							"var elemIndex = _.random(0, jsonLength - 1);\r",
							"var elem  = jsonData[elemIndex];\r",
							"// elem = jsonData[11];\r",
							"\r",
							"console.log(\"Using [\"+ elemIndex + \"] \"+ elem.Id + \" \\\"\"+ elem.Name + \"\\\" for testing\")\r",
							"\r",
							"pm.test(\"Schema validation top-level\", function () {\r",
							"    pm.expect(elem.Id).to.be.a(\"number\");\r",
							"    pm.expect(elem.Exists).to.be.true;\r",
							"    pm.expect(elem.Name).to.be.a(\"string\");\r",
							"    pm.expect(elem.Url).to.be.a(\"string\");\r",
							"    pm.expect(elem.Access).to.be.eq(\"All\");\r",
							"});\r",
							"\r",
							"if(elem.Crawl.Exists == false){\r",
							"    const noCrawlJson = \r",
							"    {\r",
							"            \"Limits\": {\r",
							"                \"Pages\": 0\r",
							"            },\r",
							"            \"Sites\": {\r",
							"                \"QualityAssurance\": {\r",
							"                    \"Limits\": {\r",
							"                        \"Links\": 0\r",
							"                    },\r",
							"                    \"Sites\": {\r",
							"                        \"LinkCheck\": {\r",
							"                            \"Id\": 0,\r",
							"                            \"Exists\": false,\r",
							"                            \"Name\": null,\r",
							"                            \"Url\": null,\r",
							"                            \"Access\": \"All\"\r",
							"                        },\r",
							"                        \"Spelling\": {\r",
							"                            \"Id\": 0,\r",
							"                            \"Exists\": false,\r",
							"                            \"Name\": null,\r",
							"                            \"Url\": null,\r",
							"                            \"Access\": \"All\"\r",
							"                        },\r",
							"                        \"Inventory\": {\r",
							"                            \"Id\": 0,\r",
							"                            \"Exists\": false,\r",
							"                            \"Name\": null,\r",
							"                            \"Url\": null,\r",
							"                            \"Access\": \"All\"\r",
							"                        }\r",
							"                    },\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Accessibility\": {\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Seo\": {\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Priority\": {\r",
							"                    \"SiteimproveTimeZone\": null,\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Policy\": {\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Document\": {\r",
							"                    \"Limits\": {\r",
							"                        \"Documents\": null\r",
							"                    },\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                },\r",
							"                \"Security\": {\r",
							"                    \"DataProcess\": null,\r",
							"                    \"Id\": 0,\r",
							"                    \"Exists\": false,\r",
							"                    \"Name\": null,\r",
							"                    \"Url\": null,\r",
							"                    \"Access\": \"All\"\r",
							"                }\r",
							"            },\r",
							"            \"Id\": 0,\r",
							"            \"Exists\": false,\r",
							"            \"Name\": null,\r",
							"            \"Url\": null,\r",
							"            \"Access\": \"All\"\r",
							"        }\r",
							"        const noCrawlJsonLinkcheck = {\r",
							"                            \"Id\": 0,\r",
							"                            \"Exists\": false,\r",
							"                            \"Name\": null,\r",
							"                            \"Url\": null,\r",
							"                            \"Access\": \"All\"\r",
							"                        }\r",
							"    pm.test(\"Crawl false validation\", function () {\r",
							"        // console.log(elem.Crawl);\r",
							"        // pm.expect(elem.Crawl.Sites.QualityAssurance.Sites.LinkCheck).be.deep.equal(noCrawlJsonLinkcheck); // debug test by testing smaller sample \r",
							"        pm.expect(elem.Crawl).to.be.deep.equal(noCrawlJson);\r",
							"    });\r",
							"} else {\r",
							"    const sitesId = elem.Crawl.Id;\r",
							"    const sitesName = elem.Crawl.Name;\r",
							"    const sitesUrl = elem.Crawl.Url;\r",
							"\r",
							"    idNameAndUrlCheckpoints = [\"QualityAssurance\", \"QualityAssurance.Sites.LinkCheck\", \"QualityAssurance.Sites.Spelling\", \"QualityAssurance.Sites.Inventory\", \"Accessibility\", \"Seo\", \"Policy\", \"Document\", \"Security\"];\r",
							"    idNameAndUrlCheckpoints.forEach(validateIdNameAndUrl);\r",
							"\r",
							"    function validateIdNameAndUrl(featureString) {\r",
							"        pm.test(featureString + \" validation\", function () {\r",
							"            const jsonPath = \"elem.Crawl.Sites.\" + featureString + \".\";\r",
							"            if(eval(jsonPath + \"Exists\") == false) {\r",
							"               \r",
							"                const falseJson = {\r",
							"                            \"Id\": 0,\r",
							"                            \"Exists\": false,\r",
							"                            \"Name\": null,\r",
							"                            \"Url\": null,\r",
							"                            \"Access\": \"All\"\r",
							"                        };\r",
							"                \r",
							"                pm.expect(eval(jsonPath.slice(0, -1))).to.be.deep.equal(falseJson);\r",
							"                console.log('No ' + featureString);    \r",
							"            } else {\r",
							"                if(featureString == \"Policy\") {\r",
							"                    pm.expect(eval(jsonPath + \"Id\")).to.be.eq(elem.Id);\r",
							"                } else {\r",
							"                    pm.expect(eval(jsonPath + \"Id\")).to.be.eq(sitesId);\r",
							"                }\r",
							"                pm.expect(eval(jsonPath + \"Name\")).to.be.eq(sitesName);\r",
							"                pm.expect(eval(jsonPath + \"Url\")).to.be.eq(sitesUrl);\r",
							"            }\r",
							"        })\r",
							"    }\r",
							"}\r",
							"\r",
							"if(elem.Analytics.Exists == false){\r",
							"    const noAnalyticsJson =  {\r",
							"            \"SiteimproveTimeZone\": null,\r",
							"            \"Limits\": {\r",
							"                \"Funnels\": 0,\r",
							"                \"Metrics\": 0,\r",
							"                \"Type\": \"Full\"\r",
							"            },\r",
							"            \"Id\": 0,\r",
							"            \"Exists\": false,\r",
							"            \"Name\": null,\r",
							"            \"Url\": null,\r",
							"            \"Access\": \"All\"\r",
							"        }\r",
							"    pm.test(\"Analytics false validation\", function () {\r",
							"        pm.expect(elem.Analytics).to.be.deep.equal(noAnalyticsJson);\r",
							"    });\r",
							"} else {\r",
							"    pm.test(\"Analytics validation\", function () {\r",
							"        pm.expect(elem.Analytics.Name).to.be.eq(elem.Name);\r",
							"        pm.expect(elem.Analytics.Url).to.be.eq(elem.Url);\r",
							"        pm.expect(elem.Analytics.Id).to.be.a(\"number\");\r",
							"    })\r",
							"    isTimezone(\"Analytics\");\r",
							"}\r",
							"\r",
							"if(elem.Response.Exists == false){\r",
							"    const noResponseJson =  {\r",
							"            \"SiteimproveTimeZone\": null,\r",
							"            \"Id\": 0,\r",
							"            \"Exists\": false,\r",
							"            \"Name\": null,\r",
							"            \"Url\": null,\r",
							"            \"Access\": \"All\"\r",
							"        }\r",
							"    pm.test(\"Response false validation\", function () {\r",
							"        pm.expect(elem.Response).to.be.deep.equal(noResponseJson);\r",
							"    });\r",
							"} else {\r",
							"    pm.test(\"Response validation\", function () {\r",
							"        pm.expect(elem.Response.Name).to.be.eq(elem.Name);\r",
							"        pm.expect(elem.Response.Url).to.be.eq(elem.Url);\r",
							"        pm.expect(elem.Response.Id).to.be.a(\"number\");\r",
							"    })\r",
							"    isTimezone(\"Response\")\r",
							"}\r",
							"\r",
							"if(elem.Adwords.Exists == false){\r",
							"    const noAdwordsJson =  {\r",
							"      \"Id\": 0,\r",
							"      \"Exists\": false,\r",
							"      \"Name\": null,\r",
							"      \"Url\": null,\r",
							"      \"Access\": \"All\"\r",
							"    }\r",
							"    pm.test(\"Adwords false validation\", function () {\r",
							"        pm.expect(elem.Adwords).to.be.deep.equal(noAdwordsJson);\r",
							"    });\r",
							"} else {\r",
							"    pm.test(\"Adwords validation (not implemented)\", function () {\r",
							"        pm.expect(elem.Adwords.Name).to.be.eq(elem.Name);\r",
							"        pm.expect(elem.Adwords.Url).to.be.eq(elem.Url);\r",
							"        pm.expect(elem.Adwords.Id).to.be.a(\"number\");\r",
							"    })\r",
							"}\r",
							"\r",
							"function isTimezone(comp) {\r",
							"    pm.test(comp + \" SiteimproveTimeZone validation\", function() {\r",
							"        pm.expect(eval(\"elem.\"+comp+\".SiteimproveTimeZone.Id\")).to.match(/\\//); // check for '/'\r",
							"        pm.expect(eval(\"elem.\"+comp+\".SiteimproveTimeZone.Name\")).to.match(/\\(UTC[-+][0-9:]*\\) .* Time/);\r",
							"    })\r",
							"}\r",
							"\r",
							"postman.setNextRequest('Delete site');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/{{account_id}}/sites",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"{{account_id}}",
						"sites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create site",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var moment = require('moment');\r",
							"pm.environment.set('myTimestamp', moment().format((\"YYMMDDHHmm\")));\r",
							"\r",
							"pm.variables.set(\"it\", pm.info.iteration);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});\r",
							"\r",
							"let testIdent = feature => pm.test(feature + \" is copied to response\" , function () {\r",
							"    var respJson = pm.response.json();\r",
							"    var reqJson = JSON.parse(pm.request.body.raw);\r",
							"    pm.expect(respJson.$feature).to.eql(reqJson.$feature);\r",
							"});\r",
							"\r",
							"identReqResp = [\"Name\", \"Url\", \"TimeZoneId\", \"CrawlMaxPages\", \"DelayInMilliseconds\", \"IsReview\"];\r",
							"identReqResp.forEach(testIdent);\r",
							"\r",
							"const service_list = [\"All\", \"Crawl\", \"Analytics\", \"Response\", \"CrawlAndResponse\", \"CrawlAndAnalytics\", \"AnalyticsAndResponse\"]  // value 0-6 in request maps to these in response\r",
							"const serviceOfIter = service_list[pm.info.iteration];\r",
							"pm.test(\"Service is \\\"\"  + serviceOfIter + \"\\\"\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.Service).to.eql(serviceOfIter);\r",
							"});\r",
							"\r",
							"if (pm.collectionVariables.get(\"runningCollection\")) {\r",
							"    console.log(\"Created \")\r",
							"}\r",
							"\r",
							"\r",
							"postman.setNextRequest('/v1/healthcheck@End');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json-patch+json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"Name\": \"Postman test service \\\"Christian III\\\" {{it}}\",\r\n  \"Url\": \"https://example.org/{{myTimestamp}}/{{it}}\",\r\n  \"TimeZoneId\": 24819,\r\n  \"Service\": {{it}},\r\n  \"CrawlMaxPages\": 50000,\r\n  \"DelayInMilliseconds\": 0,\r\n  \"IsReview\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/{{account_id}}/site?personId=29778698310&salesPersonId=6196520854",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"{{account_id}}",
						"site"
					],
					"query": [
						{
							"key": "personId",
							"value": "29778698310",
							"description": "UserId on the account (opt). Blue bar or SITEIMPROVE@SI > select id, fullname from person"
						},
						{
							"key": "salesPersonId",
							"value": "6196520854",
							"description": "SITEIMPROVE@SI > select id, name from salesperson"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete site",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"//pm.environment.set(\"account_id\", 6284295);\r",
							"pm.collectionVariables.set(\"site_id\", 29812038935);  // This is to flaky: relying on recently deleted sites\r",
							"//pm.collectionVariables.set(\"site_id\", 23490281150);    // No, no, no, getting worse: this is for the US DB\r",
							"var tryToRstore = true;\r",
							"var personId = pm.request.url.query.get(\"personId\");\r",
							"\r",
							"pm.sendRequest(pm.environment.get('SUB_BASE_URL') + \"/Account/\" + pm.environment.get('account_id') + \"/site/\" + pm.collectionVariables.get('site_id'), function (err, response) {\r",
							"    if(response.json().Object === null) {\r",
							"        if(!tryToRstore) {\r",
							"            console.log(\"Already deleted? And you asked me to not restore.\")\r",
							"        } else {\r",
							"            console.log(\"Trying to restore site before deleting it\");\r",
							"            pm.sendRequest({\r",
							"               url: pm.environment.get('SUB_BASE_URL') + \"/Account/\" + pm.environment.get('account_id') + \"/site/\" + pm.collectionVariables.get('site_id') + \"/restore?personId=\" + personId, \r",
							"               method: 'POST'\r",
							"            }, function (err, response) {\r",
							"               console.log(\"Success of restore: \" + JSON.stringify(response.json()))   \r",
							"            })\r",
							"        }\r",
							"    }\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"true\");\r",
							"});\r",
							"\r",
							"postman.setNextRequest('SubscriptionSeo');\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/{{account_id}}/site/{{site_id}}?personId=29710711344&salesPersonId=6196520854",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"{{account_id}}",
						"site",
						"{{site_id}}"
					],
					"query": [
						{
							"key": "personId",
							"value": "29710711344"
						},
						{
							"key": "salesPersonId",
							"value": "6196520854"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Current",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const AppSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Features: {\r",
							"            // AppFeatures\r",
							"        },\r",
							"        Limits: {\r",
							"            // AppLimits\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\" \r",
							"        }\r",
							"    },\r",
							"    required: [\"Features\"],\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const AppFeatures = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Groups: {\r",
							"            // GroupsSubscription\r",
							"        },\r",
							"        Response: {\r",
							"            // ResponseSubscription\r",
							"        },\r",
							"        Analytics: {\r",
							"            // AnalyticsSubscription\r",
							"        },\r",
							"        Adwords: {\r",
							"            // AdwordsSubscription\r",
							"        },\r",
							"        Crawl: {\r",
							"            // CrawlSubscription\r",
							"        },\r",
							"        Sso: {\r",
							"            // SsoSubscription\"\r",
							"        },\r",
							"        Api: {\r",
							"            // ApiSubscription\"\r",
							"        },\r",
							"        Support: {\r",
							"            // SupportSubscription\"\r",
							"        },\r",
							"        Tags: {\r",
							"            // TagsSubscription\"\r",
							"        },\r",
							"        Roles: {\r",
							"            // RolesSubscription\"\r",
							"        },\r",
							"        Reports: {\r",
							"            // ReportsSubscription\"\r",
							"        },\r",
							"        Exports: {\r",
							"            // ExportsSubscription\"\r",
							"        },\r",
							"        PasswordPolicy: {\r",
							"            // PasswordPolicySubscription = Vanilla\r",
							"        },\r",
							"        Performance: {\r",
							"            // PerformanceSubscription\r",
							"        },\r",
							"        WebSecurity: {\r",
							"            // WebSecuritySubscription = Vanilla\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"AppLimits = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Sites: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" } ,\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        Users: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" },\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        AddSites: {\r",
							"            // AddSiteAbility\"\r",
							"        },\r",
							"        SelfManage: {\r",
							"            // SelfManaged\"\r",
							"        },\r",
							"        MilliCredits: {\r",
							"            type: \"integer\",\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"Access = {\r",
							"    enum: [\r",
							"        \"All\",\r",
							"        \"Siteimprove\",\r",
							"        \"Customer\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"AddSiteAbility = {\r",
							"    enum: [\r",
							"        \"No\",\r",
							"        \"Yes\",\r",
							"         \"Review\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"AnalyticsFeatures = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Feedback: {\r",
							"            // FeedbackSubscription\"\r",
							"        },\r",
							"        BehaviourMap: {\r",
							"            // BehaviourMapSubscription\r",
							"        },\r",
							"        KeyMetrics: {\r",
							"            // KeyMetricsSubscription\"\r",
							"        },\r",
							"        Funnels: {\r",
							"            // FunnelsSubscription\"\r",
							"        },\r",
							"        Filters: {\r",
							"            // AnalyticsFiltersSubscription\" = VanillaSubscription\r",
							"        },\r",
							"        Groups: {\r",
							"            // AnalyticsGroupsSubscription = VanillaSubscription\r",
							"        },\r",
							"        Live: {\r",
							"            // AnalyticsLiveSubscription = VanillaSubscription\r",
							"        },\r",
							"        Visitors: {\r",
							"            // AnalyticsVisitorsSubscription = VanillaSubscription\r",
							"        },\r",
							"        Content: {\r",
							"            // AnalyticsContentSubscription = VanillaSubscription\r",
							"        },\r",
							"        Campaigns: {\r",
							"            // AnalyticsCampaignsSubscription = VanillaSubscription\r",
							"        },\r",
							"        TrafficSources: {\r",
							"            // AnalyticsTrafficSourcesSubscription = VanillaSubscription\r",
							"        },\r",
							"        InternalSearch: {\r",
							"            // InternalSearchSubscription = VanillaSubscription\r",
							"        },\r",
							"        EventTracking: {\r",
							"            // AnalyticsEventTrackingSubscription = VanillaSubscription\r",
							"        },\r",
							"        Behaviour: {\r",
							"            // AnalyticsBehaviourSubscription = VanillaSubscription\r",
							"        },\r",
							"        EntriesExits: {\r",
							"            // AnalyticsEntriesExitsSubscription = VanillaSubscription\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"AnalyticsLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        PageViews: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" },\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        Version: {\r",
							"        //  AnalyticsVersion\"   \r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"AnalyticsSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // AnalyticsLimit\"\r",
							"        },\r",
							"        Features: {\r",
							"            // AnalyticsFeatures\r",
							"        },\r",
							"        Package: {\r",
							"            // $ref: \"#/components/schemas/AnalyticsPackage\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"AnalyticsVersion = {\r",
							"    enum: [\r",
							"        \"Full\",\r",
							"        \"LastThirtyDaysOnly\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"BehaviourMapSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // $ref: \"#/components/schemas/BehaviourMapLimit\"\r",
							"        },\r",
							"        Enablable: {\r",
							"            type: \"boolean\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"CrawlSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // $ref: \"#/components/schemas/CrawlLimits\"\r",
							"        },\r",
							"        Features: {\r",
							"            // $ref: \"#/components/schemas/CrawlFeatures\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\" \r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"FeedbackLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        NumberOfSurveys: {\r",
							"            \"anyOf\" : [ \r",
							"                { type: \"integer\" }, \r",
							"                { type: \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        additionalProperties: false\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"FeedbackSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // $ref: \"#/components/schemas/FeedbackLimit\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"FunnelsLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Funnels: {\r",
							"            type: \"integer\",\r",
							"        },\r",
							"        MaximumFunnelSteps: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" },\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"} \r",
							"\r",
							"FunnelsSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // FunnelsLimit\"\r",
							"        },\r",
							"        Enablable: {\r",
							"           type: \"boolean\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"GroupsLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Groups: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" },\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"GroupsSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // GroupsLimit\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    required: [], // Limits optional\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"KeyMetricsLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Metrics: {\r",
							"            type: \"integer\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"KeyMetricsSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // KeyMetricsLimit\"\r",
							"        },\r",
							"        Enablable: {\r",
							"            type: \"boolean\"     \r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"MinimumCheckFrequency = {\r",
							"    enum: [\r",
							"        \"Empty\",\r",
							"        \"OneMinute\",\r",
							"        \"FiveMinutes\",\r",
							"        \"FifteenMinutes\",\r",
							"        \"ThirtyMinutes\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"} \r",
							"\r",
							"PerformanceLimits = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Quota: {\r",
							"            type: \"integer\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"PerformanceSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // PerformanceLimits\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"ResponseLimit = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Checkpoints: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"integer\" },\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        MinimumCheckFrequency: {\r",
							"            // MinimumCheckFrequency\"\r",
							"        },\r",
							"        SmsNotifications: {\r",
							"            // $ref: \"#/components/schemas/SmsNotifications\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"ResponseSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Limits: {\r",
							"            // ResponseLimit\"\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"SelfManaged = {\r",
							"    enum: [\r",
							"        \"No\",\r",
							"        \"Yes\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"SmsNotifications = {\r",
							"    enum: [\r",
							"        \"None\",\r",
							"        \"Yes\",\r",
							"        \"No\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"SubscriptionStatus = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Enabled: {\r",
							"            type: \"boolean\" \r",
							"        },\r",
							"        Expires: {\r",
							"            \"anyOf\" : [\r",
							"                { type: \"string\",  format: \"date-time\"},\r",
							"                { \"type\" : \"null\" }\r",
							"            ]\r",
							"        },\r",
							"        Type: {\r",
							"            // SubscriptionType\r",
							"        },\r",
							"        Access: {\r",
							"            // Access \r",
							"        }\r",
							"    },\r",
							"    required: [\"Enabled\"],\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"SubscriptionType = {\r",
							"    enum: [\r",
							"        \"Any\",\r",
							"        \"Trial\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"SubscriptionTypes = {\r",
							"    enum: [\r",
							"        \"AppSubscription\",\r",
							"        \"CrawlSubscription\",\r",
							"        \"QualityAssuranceSubscription\",\r",
							"        \"DocumentsSubscription\",\r",
							"        \"AccessibilitySubscription\",\r",
							"        \"PolicySubscription\",\r",
							"        \"PrioritySubscription\",\r",
							"        \"SeoSubscription\",\r",
							"        \"LinkCheckSubscription\",\r",
							"        \"SpellingSubscription\",\r",
							"        \"InventorySubscription\",\r",
							"        \"ReadabilitySubscription\",\r",
							"        \"UnsafeDomainsSubscription\",\r",
							"        \"ApiSubscription\",\r",
							"        \"GroupsSubscription\",\r",
							"        \"AnalyticsSubscription\",\r",
							"        \"SsoSubscription\",\r",
							"        \"FeedbackSubscription\",\r",
							"        \"BehaviourmapSubscription\",\r",
							"        \"KeyMetricsSubscription\",\r",
							"        \"FunnelsSubscription\",\r",
							"        \"ResponseSubscription\",\r",
							"        \"SupportSubscription\",\r",
							"        \"SinglePageCheckSubscription\",\r",
							"        \"TagsSubscription\",\r",
							"        \"RolesSubscription\",\r",
							"        \"ReportsSubscription\",\r",
							"        \"ExportsSubscription\",\r",
							"        \"PasswordPolicySubscription\",\r",
							"        \"SecuritySubscription\",\r",
							"        \"SeoTierTwoSubscription\",\r",
							"        \"SeoTierThreeSubscription\",\r",
							"        \"AnalyticsFiltersSubscription\",\r",
							"        \"AnalyticsGroupsSubscription\",\r",
							"        \"AnalyticsLiveSubscription\",\r",
							"        \"AnalyticsVisitorsSubscription\",\r",
							"        \"AnalyticsContentSubscription\",\r",
							"        \"AnalyticsCampaignsSubscription\",\r",
							"        \"AnalyticsTrafficSourcesSubscription\",\r",
							"        \"AnalyticsInternalSearchSubscription\",\r",
							"        \"AnalyticsEventTrackingSubscription\",\r",
							"        \"AnalyticsBehaviourSubscription\",\r",
							"        \"AnalyticsEntriesExitsSubscription\",\r",
							"        \"AdwordsSubscription\",\r",
							"        \"PerformanceSubscription\",\r",
							"        \"WebSecuritySubscription\",\r",
							"        \"PrePublishSubscription\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"VanillaSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Status: {\r",
							"            // SubscriptionStatus\"\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"AppSubscription.properties.Features = AppFeatures;\r",
							"AppSubscription.properties.Limits = AppLimits;\r",
							"AppSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"AnalyticsFeatures.properties.Feedback = FeedbackSubscription;\r",
							"AnalyticsFeatures.properties.Behaviour = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.BehaviourMap = BehaviourMapSubscription;\r",
							"AnalyticsFeatures.properties.Campaigns = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.Content = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.EntriesExits = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.EventTracking = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.Funnels = FunnelsSubscription;\r",
							"AnalyticsFeatures.properties.Filters = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.Groups = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.InternalSearch = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.KeyMetrics = KeyMetricsSubscription;\r",
							"AnalyticsFeatures.properties.Live = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.TrafficSources = VanillaSubscription;\r",
							"AnalyticsFeatures.properties.Visitors = VanillaSubscription;\r",
							"\r",
							"\r",
							"\r",
							"AnalyticsLimit.properties.Version = AnalyticsVersion;\r",
							"AnalyticsSubscription.properties.Limits = AnalyticsLimit;\r",
							"AnalyticsSubscription.properties.Features = AnalyticsFeatures;\r",
							"AnalyticsSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"AppFeatures.properties.Groups = GroupsSubscription;\r",
							"AppFeatures.properties.Response = ResponseSubscription;\r",
							"AppFeatures.properties.Analytics = AnalyticsSubscription;\r",
							"AppFeatures.properties.Adwords = VanillaSubscription;\r",
							"AppFeatures.properties.Crawl = CrawlSubscription;\r",
							"AppFeatures.properties.Sso = VanillaSubscription;\r",
							"AppFeatures.properties.Api = VanillaSubscription;\r",
							"AppFeatures.properties.Support = VanillaSubscription;\r",
							"AppFeatures.properties.Tags = VanillaSubscription;\r",
							"AppFeatures.properties.Roles = VanillaSubscription;\r",
							"AppFeatures.properties.Reports = VanillaSubscription;\r",
							"AppFeatures.properties.Exports = VanillaSubscription;\r",
							"AppFeatures.properties.PasswordPolicy = VanillaSubscription;\r",
							"AppFeatures.properties.Performance = PerformanceSubscription;\r",
							"AppFeatures.properties.WebSecurity = VanillaSubscription;\r",
							"\r",
							"AppLimits.properties.AddSites = AddSiteAbility;\r",
							"AppLimits.properties.SelfManage = SelfManaged;\r",
							"\r",
							"BehaviourMapSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"CrawlSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"FeedbackSubscription.properties.Limits = FeedbackLimit;\r",
							"FeedbackSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"FunnelsSubscription.properties.Limits = FunnelsLimit;\r",
							"FunnelsSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"GroupsSubscription.properties.Status = SubscriptionStatus;\r",
							"GroupsSubscription.properties.Limits = GroupsLimit;\r",
							"\r",
							"KeyMetricsSubscription.properties.Limits = KeyMetricsLimit;\r",
							"KeyMetricsSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"PerformanceSubscription.properties.Status = SubscriptionStatus;\r",
							"PerformanceSubscription.properties.Limits = PerformanceLimits;\r",
							"\r",
							"ResponseLimit.properties.MinimumCheckFrequency = MinimumCheckFrequency;\r",
							"ResponseLimit.properties.SmsNotifications = SmsNotifications;\r",
							"\r",
							"ResponseSubscription.properties.Status = SubscriptionStatus;\r",
							"ResponseSubscription.properties.Limits = ResponseLimit;\r",
							"\r",
							"SubscriptionStatus.properties.SubscriptionType = SubscriptionType;\r",
							"SubscriptionStatus.properties.Access = Access;\r",
							"\r",
							"VanillaSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(AppSubscription);\r",
							"    console.log(AppFeatures);\r",
							"})\r",
							"\r",
							"postman.setNextRequest('/v1/healthcheck@End');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/{{account_id}}/current?id={{account_id}}",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"{{account_id}}",
						"current"
					],
					"query": [
						{
							"key": "id",
							"value": "{{account_id}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Diff",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"postman.setNextRequest('/v1/healthcheck@End');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "SubscriptionSeo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const SeoSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Features: {\r",
							"            // SeoFeatures,\r",
							"        },\r",
							"        Limits: {\r",
							"            // SeoLimits\r",
							"        },\r",
							"        Status: {\r",
							"            // SubscriptionStatus\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"};\r",
							"\r",
							"const Access = {\r",
							"    enum: [\r",
							"        \"All\",\r",
							"        \"Siteimprove\",\r",
							"        \"Customer\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"const SeoFeatures = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        TierTwo: {\r",
							"            // SeoTierTwoSubscription\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"};\r",
							"\r",
							"const SeoKeywordUpdates = {\r",
							"    enum: [\r",
							"        \"Continuously\",\r",
							"        \"OnlyOnce\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"const SeoLimits = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        DiscoveryKeywords: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MonthlyDiscoveryUpdates: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        RelatedPerQuery: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MonthlyRelatedQueries: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        ActivityPlans: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MonitoredKeywordsPerActivityPlan: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MonthlyKeywordUpdates: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        CompetitorsPerActivityPlan: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MaxMonthlyBacklinkOverviewUpdates: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MaxMonthlyNewLostBacklinkUpdates: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        MaxMonthlyTopBottomBacklinkUpdates: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        TopBottomBacklinks: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        NewLostBacklinks: {\r",
							"            type: \"integer\"\r",
							"        },\r",
							"        KeywordUpdates: {\r",
							"            // SeoKeywordUpdates\r",
							"        }\r",
							"    },\r",
							"    required: [\"DiscoveryKeywords\", \"MonthlyDiscoveryUpdates\", \"RelatedPerQuery\", \"MonthlyRelatedQueries\", \"ActivityPlans\", \"MonitoredKeywordsPerActivityPlan\", \"MonthlyKeywordUpdates\", \"CompetitorsPerActivityPlan\", \"MaxMonthlyBacklinkOverviewUpdates\", \"MaxMonthlyNewLostBacklinkUpdates\", \"MaxMonthlyTopBottomBacklinkUpdates\", \"TopBottomBacklinks\", \"NewLostBacklinks\", \"KeywordUpdates\"],\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const SeoTierThreeSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Status: {\r",
							"            // SubscriptionStatus\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const SeoTierTwoFeatures = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        TierThree: {\r",
							"            // SeoTierThreeSubscription\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const SeoTierTwoSubscription = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Features: {\r",
							"            // SeoTierTwoFeatures\r",
							"        },\r",
							"        Status: {\r",
							"            //  SubscriptionStatus\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const SubscriptionStatus = {\r",
							"    type: \"object\",\r",
							"    properties: {\r",
							"        Enabled: {\r",
							"            type: \"boolean\"\r",
							"        },\r",
							"        Expires: {\r",
							"            type: \"string\",\r",
							"            format: \"date-time\",\r",
							"            nullable: true\r",
							"        },\r",
							"        Type: {\r",
							"            // SubscriptionType\r",
							"        },\r",
							"        Access: {\r",
							"            // Access\r",
							"        }\r",
							"    },\r",
							"    additionalProperties: false\r",
							"}\r",
							"\r",
							"const SubscriptionType = {\r",
							"    enum: [\r",
							"        \"Any\",\r",
							"        \"Trial\"\r",
							"    ],\r",
							"    type: \"string\"\r",
							"}\r",
							"\r",
							"SeoSubscription.properties.Features = SeoFeatures;\r",
							"SeoSubscription.properties.Limits = SeoLimits;\r",
							"SeoSubscription.properties.Status = SubscriptionStatus;\r",
							"\r",
							"SeoFeatures.properties.TierTwo = SeoTierTwoSubscription;\r",
							"SeoLimits.properties.KeywordUpdates = SeoKeywordUpdates;\r",
							"SeoTierThreeSubscription.properties.Status = SubscriptionStatus;\r",
							"SeoTierTwoFeatures.properties.TierThree = SeoTierThreeSubscription;\r",
							"SeoTierTwoSubscription.properties.Features = SeoTierTwoFeatures;\r",
							"SeoTierTwoSubscription.properties.Status = SubscriptionStatus;\r",
							"SubscriptionStatus.properties.Access = Access;\r",
							"SubscriptionStatus.properties.Type = SubscriptionType;\r",
							"\r",
							"pm.test(\"Validate schema\", () => {\r",
							"    pm.response.to.have.jsonSchema(SeoSubscription);\r",
							"})\r",
							"\r",
							"postman.setNextRequest('Available Features');\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/Account/{{account_id}}/subscription/seo",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"Account",
						"{{account_id}}",
						"subscription",
						"seo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Available Features",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const response_body_string = [\r",
							"  {\r",
							"    \"Type\": \"AppSubscription\",\r",
							"    \"DependOn\": null,\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"AppLimits\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Sites\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"Users\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"AddSites\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.AddSiteAbility\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"SelfManage\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.SelfManaged\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MilliCredits\",\r",
							"          \"Type\": \"System.Int64\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"GroupsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"GroupsLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Groups\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"ResponseSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"ResponseLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Checkpoints\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MinimumCheckFrequency\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.MinimumCheckFrequency\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"SmsNotifications\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.SmsNotifications\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"AnalyticsLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"PageViews\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"Version\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.AnalyticsVersion\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"FeedbackSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"FeedbackLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"NumberOfSurveys\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"BehaviourMapSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"BehaviourMapLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"BehaviourMaps\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"KeyMetricsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"KeyMetricsLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Metrics\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"FunnelsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"FunnelsLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Funnels\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MaximumFunnelSteps\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsFiltersSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsGroupsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsLiveSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsVisitorsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsContentSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsCampaignsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsTrafficSourcesSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsInternalSearchSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsEventTrackingSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsBehaviourSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AnalyticsEntriesExitsSubscription\",\r",
							"    \"DependOn\": \"AnalyticsSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AdwordsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"CrawlSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"CrawlLimits\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Frequency\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.CrawlFrequency\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"OnDemand\",\r",
							"          \"Type\": \"System.Boolean\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"Pages\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"QualityAssuranceSubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"QualityAssuranceLimits\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Links\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"LinkCheckSubscription\",\r",
							"    \"DependOn\": \"QualityAssuranceSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SpellingSubscription\",\r",
							"    \"DependOn\": \"QualityAssuranceSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"InventorySubscription\",\r",
							"    \"DependOn\": \"QualityAssuranceSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"ReadabilitySubscription\",\r",
							"    \"DependOn\": \"QualityAssuranceSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"UnsafeDomainsSubscription\",\r",
							"    \"DependOn\": \"QualityAssuranceSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"DocumentsSubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"DocumentsLimit\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Documents\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": true\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"AccessibilitySubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"PolicySubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"PrioritySubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SeoSubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"SeoLimits\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"DiscoveryKeywords\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MonthlyDiscoveryUpdates\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"RelatedPerQuery\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MonthlyRelatedQueries\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"ActivityPlans\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MonitoredKeywordsPerActivityPlan\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MonthlyKeywordUpdates\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"CompetitorsPerActivityPlan\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MaxMonthlyBacklinkOverviewUpdates\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MaxMonthlyNewLostBacklinkUpdates\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"MaxMonthlyTopBottomBacklinkUpdates\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"TopBottomBacklinks\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"NewLostBacklinks\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        },\r",
							"        {\r",
							"          \"Name\": \"KeywordUpdates\",\r",
							"          \"Type\": \"SubscriptionsApi.Client.Tools.Subscriptions.SeoKeywordUpdates\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SeoTierTwoSubscription\",\r",
							"    \"DependOn\": \"SeoSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SeoTierThreeSubscription\",\r",
							"    \"DependOn\": \"SeoTierTwoSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SecuritySubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SinglePageCheckSubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"PrePublishSubscription\",\r",
							"    \"DependOn\": \"CrawlSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SsoSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"ApiSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"SupportSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"TagsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"RolesSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"ReportsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"ExportsSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"PasswordPolicySubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"PerformanceSubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": {\r",
							"      \"Type\": \"PerformanceLimits\",\r",
							"      \"Fields\": [\r",
							"        {\r",
							"          \"Name\": \"Quota\",\r",
							"          \"Type\": \"System.Int32\",\r",
							"          \"IsOptional\": false\r",
							"        }\r",
							"      ]\r",
							"    }\r",
							"  },\r",
							"  {\r",
							"    \"Type\": \"WebSecuritySubscription\",\r",
							"    \"DependOn\": \"AppSubscription\",\r",
							"    \"Limits\": null\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(\"Diff response with expected list\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    console.log(\"pm.response.json(): \", jsonData);\r",
							"    console.log(\"response_body_string: \", response_body_string);\r",
							"    pm.expect(jsonData).to.eql(response_body_string);\r",
							"});\r",
							"\r",
							"postman.setNextRequest('/v1/healthcheck@End');"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{SUB_BASE_URL}}/features",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"features"
					]
				}
			},
			"response": []
		},
		{
			"name": "/v1/healthcheck@End",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"true\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.collectionVariables.set(\"runningCollection\", false);\r",
							"console.log(\"End of workflow\")\r",
							"postman.setNextRequest(null); // end workflow"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "text/plain"
					}
				],
				"url": {
					"raw": "{{SUB_BASE_URL}}/healthcheck",
					"host": [
						"{{SUB_BASE_URL}}"
					],
					"path": [
						"healthcheck"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/healthcheck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"healthcheck"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "true"
				}
			]
		}
	],
	"variable": [
		{
			"key": "rndSub",
			"value": "1"
		},
		{
			"key": "rndSub",
			"value": ""
		},
		{
			"key": "subName",
			"value": ""
		},
		{
			"key": "sub_name",
			"value": ""
		},
		{
			"key": "site_id",
			"value": "000"
		},
		{
			"key": "runningCollection",
			"value": ""
		}
	]
}
